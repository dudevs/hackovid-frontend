{"version":3,"sources":["assets/images/baby_food.png","assets/images/canned_food.png","assets/images/eggs.png","assets/images/flour.png","assets/images/fruit.png","assets/images/hand_soap.png","assets/images/milk.png","assets/images/oil.png","assets/images/pasta.png","assets/images/rice.png","assets/images/toilet_paper.png","assets/images/vegetables.png","assets/images/water.png","components/SearchForm/SearchForm.js","components/StoresList/StoreButton/StoreButton.js","components/StoresList/StoresList.js","assets/images/index.js","components/ProductsList/ProductTimeline/TimePiece/TimePiece.js","lib/utils.js","components/ProductsList/ProductTimeline/ProductTimeline.js","lib/baseProducts.js","components/ProductsList/ProductsList.js","components/Loader/Loader.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","SearchForm","geoFindMe","findAddress","onInputChange","className","type","placeholder","onChange","onSubmit","onClick","hidden","StoreButton","store","selectStore","key","id","name","address","distance","StoresList","storeButton","nearStores","selectedStore","find","map","baby_food","require","canned_food","eggs","flour","fruit","hand_soap","milk","oil","pasta","rice","toilet_paper","vegetables","water","TimePiece","color","hour","min","votes","timeText","apiCall","url","method","a","fetch","response","status","json","Error","handleError","err","message","alert","console","log","images","ProductTimeline","baseProduct","dbProduct","state","getTimeline","BASE_ENDPOINT","options","TIMELINE_SPLIT_COUNT","MINUTES_PER_PIECE","timePiece","lastMin","startOfMinute","Date","now","subMinutes","getMinutes","lastExactMinute","myTimeline","Array","forEach","obj","timestamp","getUnixTime","doWeHaveIt","timeline","filter","stamp","upvote","downvote","unshift","period","time","addZero","i","toString","fromUnixTime","getHours","epochToHourMinute","votesCount","handleVote","e","currentTarget","dataset","product","vote","catch","item","src","alt","data-product","data-vote","baseProducts","ProductsList","productTimeline","comment","storeTimeline","Loader","myLoader","loading","initialState","input","currentLocation","lat","lon","App","preventDefault","setState","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","myLat","myLon","searchStores","target","value","encodeURI","window","open","document","querySelector","stores","this","Component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","then","registration","unregister","error"],"mappings":"yMAAAA,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,8LC8B5BC,G,MA3BI,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,UAAWC,EAAiC,EAAjCA,YAAaC,EAAoB,EAApBA,cAI5C,OACE,0BAAMC,UAAU,eACd,yBAAKA,UAAU,kBACb,2BACEC,KAAK,OACLC,YAAY,YACZC,SAAWJ,EACXK,SAAWN,IAEb,4BACEE,UAAU,UACVK,QAAUP,GAFZ,UAIA,2BAAOG,KAAK,SAASG,SAAWN,EAAcQ,QAAM,KAEtD,4BACEN,UAAU,SACVK,QAAUR,GAFZ,kBCXSU,EATK,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YAC5B,OACE,yBAAKT,UAAU,QAAQU,IAAKF,EAAMG,GAAIA,GAAIH,EAAMG,GAAIN,QAAUI,GAC5D,4BAAKD,EAAMI,MACX,4BAAKJ,EAAMK,QAAX,IAAoB,8BAAOL,EAAMM,SAAb,QCgBXC,G,MAlBI,SAAC,GAAgD,IAE9DC,EAFgBP,EAA6C,EAA7CA,YAAaQ,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,cACvCV,EAAQS,EAAWE,MAAK,SAAAX,GAAK,OAAIA,EAAMG,KAAOO,KAUpD,OALEF,EADEE,EACY,kBAAC,EAAD,CAAaV,MAAOA,EAAOC,YAAaA,IAExCQ,EAAWG,KAAI,SAAAZ,GAAK,OAAI,kBAAC,EAAD,CAAaE,IAAKF,EAAMG,GAAIH,MAAOA,EAAOC,YAAaA,OAI7F,yBAAKT,UAAU,UACXgB,K,eCjBKK,EAAYC,EAAQ,IACpBC,EAAcD,EAAQ,IACtBE,EAAOF,EAAQ,IACfG,EAAQH,EAAQ,IAChBI,EAAQJ,EAAQ,IAChBK,EAAYL,EAAQ,IACpBM,EAAON,EAAQ,IACfO,EAAMP,EAAQ,IACdQ,EAAQR,EAAQ,IAChBS,EAAOT,EAAQ,IACfU,EAAeV,EAAQ,IACvBW,EAAaX,EAAQ,IACrBY,EAAQZ,EAAQ,ICoBda,EA7BG,SAAC,GAA0B,IAGvCC,EAHeC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,IAAKC,EAAY,EAAZA,MAIhB,IAAVA,IACFH,EAAQ,QAENG,EAAQ,IACVH,EAAQ,SAENG,EAAQ,IACVH,EAAQ,OAIV,IAAII,EAAW,GAOf,MANY,OAARF,GAAwB,OAARA,IAClBE,EAAY,kBAAC,WAAD,KACV,2BAAIH,EAAJ,IAAWC,KAKb,yBAAKtC,UAAS,qBAAgBoC,IAC1BI,I,gCC3BKC,EAAO,uCAAG,WAAOC,EAAKC,GAAZ,eAAAC,EAAA,sEACEC,MAAMH,EAAK,CAAEC,OAAQA,IADvB,OACfG,EADe,YAEdA,EAASC,OAFK,OAGd,MAHc,OAKd,MALc,OAOd,MAPc,+CAIVD,EAASE,QAJC,aAMX,IAAIC,MAAM,OANC,aAQX,IAAIA,MAAM,OARC,aAUX,IAAIA,MAAM,eAVC,4CAAH,wDAcPC,EAAc,SAACC,GAC1B,OAAOA,EAAIC,SACT,IAAK,MACHC,MAAM,8CACN,MACF,IAAK,MACHA,MAAM,mCACN,MACF,QACEC,QAAQC,IAAI,yBAA2BJ,GACvCE,MAAM,gDClBNG,EAAS,CACbnC,UAAWA,EACXE,YAAaA,EACbC,KAAMA,EACNC,MAAOA,EACPC,MAAOA,EACPC,UAAWA,EACXC,KAAMA,EACNC,IAAKA,EACLC,MAAOA,EACPC,KAAMA,EACNC,aAAcA,EACdC,WAAYA,EACZC,MAAOA,GA2FMuB,EAxFS,SAAC,GAAmE,IAAjEC,EAAgE,EAAhEA,YAAaC,EAAmD,EAAnDA,UAAWC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,YAAaC,EAAoB,EAApBA,cAAoB,EAErCF,EAAMG,QAAlDC,EAFiF,EAEjFA,qBAAsBC,EAF2D,EAE3DA,kBAgB1BC,EALoB,WACtB,IAAMC,EAAUC,YAAcC,KAAKC,OACnC,OAAOC,YAAWJ,EAASA,EAAQK,aAAeP,GAGpCQ,GAIZC,EAAa,GAEjB,YAAIC,MAAMX,IAAuBY,SAAQ,WACvC,IAAMC,EAAM,GACZA,EAAIC,UAAYC,YAAYb,GAC5B,IAAIc,GAAa,EACjB,GAAGrB,EAAW,CAAC,IAAD,EACKA,EAAUsB,SAASC,QAAO,SAAAC,GACzC,OAAOA,EAAML,YAAcD,EAAIC,aAD/BE,EADU,oBAKXA,GACDH,EAAIO,OAASJ,EAAWI,OACxBP,EAAIQ,SAAWL,EAAWK,WAE1BR,EAAIO,OAAS,EACbP,EAAIQ,SAAW,GAEjBnB,EAAYK,YAAWL,EAAWD,GAClCS,EAAWY,QAAQT,MAIrB,IAAMI,EAAWP,EAAWtD,KAAI,SAAAmE,GAAW,IAAD,EAxChB,SAAAC,GACxB,IAAMC,EAAU,SAAAC,GAAC,OAAIA,EAAE,GAAK,IAAIA,EAAIA,EAAEC,YAGtC,MAAO,CAFOF,EAAQG,YAAaJ,GAAMK,YAC5BJ,EAAQG,YAAaJ,GAAMhB,eAsCpBsB,CAAkBP,EAAOT,WADL,mBACjCzC,EADiC,KAC3BC,EAD2B,KAElCyD,EAAaR,EAAOH,OAASG,EAAOF,SAC1C,OAAO,kBAAC,EAAD,CAAWhD,KAAMA,EAAMC,IAAKA,EAAKC,MAAOwD,EAAYrF,IAAK2B,EAAKC,OAIjE0D,EAAU,uCAAG,WAAOC,GAAP,qBAAArD,EAAA,+DACSqD,EAAEC,cAAcC,QAAlCC,EADS,EACTA,QAASC,EADA,EACAA,KACX3D,EAFW,UAEFoB,EAFE,wBAE2BF,EAAM1C,cAFjC,sBAE4DkF,EAF5D,mBAE8EC,GAF9E,kBAIT5D,EAAQC,EAAK,QAAQ4D,MAAMpD,GAJlB,OAKfW,IAAcyC,MAAMpD,GALL,gDAQfA,EAAY,EAAD,IARI,iEAAH,sDAYhB,OACE,yBAAKvC,GAAI+C,EAAY6C,KAAMvG,UAAU,WACnC,yBAAKA,UAAU,gBAAgBwG,IAAMhD,EAAOE,EAAY6C,MAAQE,IAAK/C,EAAY6C,OACjF,yBAAKvG,UAAU,oBACXiF,GAEJ,yBAAKjF,UAAU,QACb,4BACEA,UAAU,QACV0G,eAAchD,EAAY6C,KAC1BI,YAAU,OACVtG,QAAU2F,GAJZ,MAMA,4BACEhG,UAAU,MACV0G,eAAchD,EAAY6C,KAC1BI,YAAU,QACVtG,QAAU2F,GAJZ,SCnGKY,G,MAAe,CAC1B,CACEL,KAAM,QACNtB,SAAU,IAEZ,CACEsB,KAAM,cACNtB,SAAU,IAEZ,CACEsB,KAAM,QACNtB,SAAU,IAEZ,CACEsB,KAAM,aACNtB,SAAU,IAEZ,CACEsB,KAAM,QACNtB,SAAU,IAEZ,CACEsB,KAAM,OACNtB,SAAU,IAEZ,CACEsB,KAAM,MACNtB,SAAU,IAEZ,CACEsB,KAAM,QACNtB,SAAU,IAEZ,CACEsB,KAAM,OACNtB,SAAU,IAEZ,CACEsB,KAAM,OACNtB,SAAU,IAEZ,CACEsB,KAAM,YACNtB,SAAU,IAEZ,CACEsB,KAAM,YACNtB,SAAU,IAEZ,CACEsB,KAAM,eACNtB,SAAU,MCPC4B,EArCM,SAAC,GAA2C,IAE3DC,EACAC,EAHkBnD,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,YAAaC,EAAoB,EAApBA,cA6B1C,OAvBGF,EAAM1C,gBAGP4F,EAAkBF,EAAaxF,KAAI,SAAAsC,GAAgB,IAAD,EAC1BE,EAAMoD,cAAc9B,QAAO,SAAA1E,GAAK,OAAIA,EAAM+F,OAAS7C,EAAY6C,QAA7E5C,EADwC,oBAGhD,OAAO,kBAAC,EAAD,CACPjD,IAAKgD,EAAY6C,KACjB7C,YAAcA,EACdC,UAAYA,EACZC,MAAQA,EACRC,YAAaA,EACbC,cAAeA,OAIjBiD,EAAW,kBAAC,WAAD,KACT,yBAAK/G,UAAU,WACb,oFAMJ,yBAAKA,UAAU,gBACX+G,EACAD,ICLOG,G,MA9BA,SAAC,GAAiB,IAE3BC,EAqBJ,OAvB8B,EAAdC,UAKdD,EAAW,kBAAC,WAAD,KACX,yBAAKlH,UAAU,WACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,cACb,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,mCAQN,6BACIkH,KCrBFpD,G,MAAgB,sCAEhBsD,EAAe,CACnBD,SAAS,EACTE,MAAO,GACPC,gBAAiB,CACfC,IAAK,GACLC,IAAK,IAEPvG,WAAY,GACZC,cAAe,GACf8F,cAAe,GACfjD,QAAS,CACPC,qBAAsB,GACtBC,kBAAmB,IAiHRwD,E,kDA5Gb,aAAe,IAAD,8BACZ,gBAKF5H,UAAY,SAACoG,GACXA,EAAEyB,iBACF,EAAKC,SAASP,GAeVQ,UAAUC,YAGZD,UAAUC,YAAYC,oBAjBR,SAACC,GAAc,IAAD,EACH,CAAEA,EAASC,OAAOC,SAAUF,EAASC,OAAOE,WAA7DC,EADoB,KACbC,EADa,KAE5B,EAAKT,SAAS,CACZL,gBAAiB,CACfC,IAAKY,EACLX,IAAKY,KAGT,IAAM1F,EAAG,UAAMoB,EAAN,uCAAkDqE,EAAlD,gBAA+DC,GACxE,EAAKC,aAAa3F,GAAK4D,MAAMpD,MAGjB,SAACC,GAAD,OAASG,QAAQC,IAAIJ,MAGjCE,MAAM,wCAxBI,EA+BdtD,cAAgB,SAACkG,GACf,EAAK0B,SAAS,CAACN,MAAOpB,EAAEqC,OAAOC,SAhCnB,EAoCdzI,YAAc,SAACmG,GAGb,GAFAA,EAAEyB,iBACF,EAAKC,SAASP,GACV,EAAKxD,MAAMyD,MACf,GAAwB,aAArB,EAAKzD,MAAMyD,MAAd,CAIA,IAAM3E,EAAG,UAAMoB,EAAN,0CAAqD0E,UAAU,EAAK5E,MAAMyD,QACnF,EAAKgB,aAAa3F,GAAK4D,MAAMpD,QAJ3BuF,OAAOC,KAAK,gDAzCF,EAiDdL,aAjDc,uCAiDC,WAAO3F,GAAP,eAAAE,EAAA,6DACE+F,SAASC,cAAc,sBAC/BL,MAAQ,GAFF,SAIX,EAAKZ,SAAS,CAACR,SAAS,IAJb,SAKU1E,EAAQC,EAAK,OALvB,OAKLmG,EALK,OAMX,EAAKlB,SAAS,CAAE1G,WAAY4H,EAAQ1B,SAAS,IANlC,kDAQX,EAAKQ,SAAS,CAAER,SAAS,IACzBjE,EAAY,EAAD,IATA,0DAjDD,wDA+DdzC,YA/Dc,uCA+DA,WAAOwF,GAAP,SAAArD,EAAA,sEACN,EAAK+E,SAAS,CAACzG,cAAgB+E,EAAEC,cAAcvF,KADzC,OAEZ,EAAKkD,cAAcyC,MAAMpD,GAFb,2CA/DA,wDAsEdW,YAtEc,sBAsEA,8BAAAjB,EAAA,6DACNF,EADM,UACGoB,EADH,wBACgC,EAAKF,MAAM1C,eAD3C,SAGV,EAAKyG,SAAS,CAAER,SAAS,IAHf,SAIa1E,EAAQC,EAAK,OAJ1B,OAIJuC,EAJI,OAKV,EAAK0C,SAAS,CAAEX,cAAe/B,EAAUkC,SAAS,IALxC,gDAOV,EAAKQ,SAAS,CAAER,SAAS,IACzBjE,EAAY,EAAD,IARD,iEApEZ,EAAKU,MAAQwD,EAFD,E,qDAmFZ,OACE,yBAAKpH,UAAU,OACb,yBAAKA,UAAU,eACb,kBAAC,EAAD,CACEH,UAAWiJ,KAAKjJ,UAChBC,YAAagJ,KAAKhJ,YAClBC,cAAe+I,KAAK/I,gBAEtB,kBAAC,EAAD,CAAQoH,QAAS2B,KAAKlF,MAAMuD,UAC5B,kBAAC,EAAD,CACElG,WAAY6H,KAAKlF,MAAM3C,WACvBR,YAAaqI,KAAKrI,YAClBS,cAAe4H,KAAKlF,MAAM1C,gBAE5B,kBAAC,EAAD,CACE0C,MAAOkF,KAAKlF,MACZC,YAAaiF,KAAKjF,YAClBC,cAAeA,U,GArGTiF,aCdEC,QACW,cAA7BP,OAAOQ,SAASC,UAEe,UAA7BT,OAAOQ,SAASC,UAEhBT,OAAOQ,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFX,SAASY,eAAe,SDyHpB,kBAAmB3B,WACrBA,UAAU4B,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdtD,OAAM,SAAAuD,GACLvG,QAAQuG,MAAMA,EAAMzG,c","file":"static/js/main.445e348f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/baby_food.53d0c62b.png\";","module.exports = __webpack_public_path__ + \"static/media/canned_food.fdcc8c91.png\";","module.exports = __webpack_public_path__ + \"static/media/eggs.b8f4eeb8.png\";","module.exports = __webpack_public_path__ + \"static/media/flour.6ece964f.png\";","module.exports = __webpack_public_path__ + \"static/media/fruit.ffa30d5e.png\";","module.exports = __webpack_public_path__ + \"static/media/hand_soap.e4f78d1c.png\";","module.exports = __webpack_public_path__ + \"static/media/milk.f7bdb95d.png\";","module.exports = __webpack_public_path__ + \"static/media/oil.d1d2ff36.png\";","module.exports = __webpack_public_path__ + \"static/media/pasta.c2d0b752.png\";","module.exports = __webpack_public_path__ + \"static/media/rice.1a0fe5f1.png\";","module.exports = __webpack_public_path__ + \"static/media/toilet_paper.d4b5d890.png\";","module.exports = __webpack_public_path__ + \"static/media/vegetables.25ec5087.png\";","module.exports = __webpack_public_path__ + \"static/media/water.2409271a.png\";","import React from 'react';\r\nimport './SearchForm.css';\r\n\r\nconst SearchForm = ({ geoFindMe, findAddress, onInputChange }) => {\r\n\r\n\r\n\r\n  return (\r\n    <form className=\"search-form\">\r\n      <div className=\"search-address\">\r\n        <input\r\n          type=\"text\" \r\n          placeholder=\"Adreça\"\r\n          onChange={ onInputChange }\r\n          onSubmit={ findAddress }\r\n        ></input>\r\n        <button\r\n          className=\"address\"\r\n          onClick={ findAddress }\r\n        >Buscar</button>\r\n        <input type=\"submit\" onSubmit={ findAddress } hidden/>\r\n      </div>\r\n      <button\r\n        className=\"locate\"\r\n        onClick={ geoFindMe }\r\n      >Localitza'm</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SearchForm;","import React from 'react';\r\n\r\nconst StoreButton = ({ store, selectStore }) => {\r\n  return (\r\n    <div className=\"store\" key={store.id} id={store.id} onClick={ selectStore }>\r\n      <h1>{store.name}</h1>\r\n      <h3>{store.address} <span>{store.distance}m</span></h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StoreButton;","import React from 'react';\r\nimport StoreButton from './StoreButton/StoreButton';\r\nimport './StoresList.css';\r\n\r\nconst StoresList = ({ selectStore, nearStores, selectedStore }) => {\r\n  const store = nearStores.find(store => store.id === selectedStore);\r\n  let storeButton;\r\n  \r\n  // check if the user has selected a store. if not show all the stores \r\n  if (selectedStore) {\r\n    storeButton = <StoreButton store={store} selectStore={selectStore}/>\r\n  } else {\r\n    storeButton = nearStores.map(store => <StoreButton key={store.id} store={store} selectStore={selectStore}/>);\r\n  }\r\n\r\n  return (\r\n    <div className=\"stores\">\r\n      { storeButton }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StoresList;","export const baby_food = require('./baby_food.png'); \r\nexport const canned_food = require('./canned_food.png'); \r\nexport const eggs = require('./eggs.png'); \r\nexport const flour = require('./flour.png'); \r\nexport const fruit = require('./fruit.png'); \r\nexport const hand_soap = require('./hand_soap.png'); \r\nexport const milk = require('./milk.png'); \r\nexport const oil = require('./oil.png'); \r\nexport const pasta = require('./pasta.png'); \r\nexport const rice = require('./rice.png'); \r\nexport const toilet_paper = require('./toilet_paper.png'); \r\nexport const vegetables = require('./vegetables.png'); \r\nexport const water = require('./water.png'); ","import React from 'react';\r\nimport { Fragment } from 'react';\r\n\r\nconst TimePiece = ({ hour, min, votes }) => {\r\n\r\n  // select the color of the TimePiece matching the result of the votes\r\n  let color;\r\n  if (votes === 0) {\r\n    color = 'gray';\r\n  };\r\n  if (votes > 0) {\r\n    color = 'green';\r\n  };\r\n  if (votes < 0) {\r\n    color = 'red';\r\n  };\r\n\r\n  // add the time text every half hour\r\n  let timeText = '';\r\n  if (min === \"00\" || min === \"30\") {\r\n    timeText = (<Fragment>\r\n      <p>{hour}:{min}</p>\r\n    </Fragment>)\r\n  }\r\n\r\n  return (\r\n    <div className={`time-piece ${color}`}>\r\n      { timeText }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TimePiece;","export const apiCall = async (url, method) => {\r\n  const response = await fetch(url, { method: method });\r\n  switch(response.status) {\r\n    case 200:\r\n      return response.json();\r\n    case 400:\r\n      throw new Error(\"400\");\r\n    case 500:\r\n      throw new Error(\"500\");\r\n    default:\r\n      throw new Error(\"not working\");\r\n  }\r\n}\r\n\r\nexport const handleError = (err) => {\r\n  switch(err.message) {\r\n    case \"400\":\r\n      alert('Hi ha hagut un error, prova-ho més tard');\r\n      break;\r\n    case \"500\":    \r\n      alert('El servei no està disponible');\r\n      break;\r\n    default:\r\n      console.log('Hi ha hagut un error: ' + err);\r\n      alert('Hi ha hagut un error, prova-ho més tard')\r\n      break;\r\n  }\r\n}","import React from 'react';\r\nimport { baby_food, canned_food, eggs, flour, fruit, hand_soap, milk, oil, pasta, rice, toilet_paper, vegetables, water } from '../../../assets/images';\r\nimport TimePiece from './TimePiece/TimePiece';\r\nimport { fromUnixTime, getUnixTime, startOfMinute, subMinutes } from 'date-fns';\r\nimport { apiCall, handleError } from \"../../../lib/utils\";\r\n\r\nconst images = {\r\n  baby_food: baby_food,\r\n  canned_food: canned_food,\r\n  eggs: eggs,\r\n  flour: flour,\r\n  fruit: fruit,\r\n  hand_soap: hand_soap,\r\n  milk: milk,\r\n  oil: oil,\r\n  pasta: pasta,\r\n  rice: rice,\r\n  toilet_paper: toilet_paper,\r\n  vegetables: vegetables,\r\n  water: water\r\n}\r\n\r\nconst ProductTimeline = ({ baseProduct, dbProduct, state, getTimeline, BASE_ENDPOINT }) => {\r\n\r\n  const { TIMELINE_SPLIT_COUNT, MINUTES_PER_PIECE } = state.options;\r\n\r\n  // convert epoch time to an array with [hour, minute]\r\n  const epochToHourMinute = time => {\r\n    const addZero = i => i<10 ? '0'+i : i.toString();\r\n    const hours = addZero(fromUnixTime(time).getHours());\r\n    const mins = addZero(fromUnixTime(time).getMinutes());\r\n    return [hours, mins];\r\n  };\r\n\r\n  // get the date of the last block of time used for the timeline divisions\r\n  const lastExactMinute = () => {\r\n    const lastMin = startOfMinute(Date.now());\r\n    return subMinutes(lastMin, lastMin.getMinutes() % MINUTES_PER_PIECE);\r\n  }\r\n  \r\n  let timePiece = lastExactMinute();\r\n\r\n  // create an array with each of the timeline pieces\r\n  // check if we have votes in our database from that exact timestamp, if not leave it empty\r\n  let myTimeline = [];\r\n\r\n  [...Array(TIMELINE_SPLIT_COUNT)].forEach(() => {\r\n    const obj = {};\r\n    obj.timestamp = getUnixTime(timePiece);\r\n    let doWeHaveIt = false;\r\n    if(dbProduct) {\r\n      [ doWeHaveIt ] = dbProduct.timeline.filter(stamp => {\r\n        return stamp.timestamp === obj.timestamp;\r\n      });\r\n    }\r\n    if(doWeHaveIt) {\r\n      obj.upvote = doWeHaveIt.upvote;\r\n      obj.downvote = doWeHaveIt.downvote;\r\n    } else {\r\n      obj.upvote = 0;\r\n      obj.downvote = 0;\r\n    }\r\n    timePiece = subMinutes(timePiece, MINUTES_PER_PIECE);\r\n    myTimeline.unshift(obj);\r\n  });\r\n\r\n  // create each TimePiece component that forms the timeline for the current product\r\n  const timeline = myTimeline.map(period => {\r\n    const [hour, min] = epochToHourMinute(period.timestamp)\r\n    const votesCount = period.upvote - period.downvote;\r\n    return <TimePiece hour={hour} min={min} votes={votesCount} key={hour+min}/>\r\n  })\r\n\r\n  // send the vote to the database, refresh the timeline with the new data\r\n  const handleVote = async (e) => {\r\n    const { product, vote } = e.currentTarget.dataset;\r\n    const url = `${BASE_ENDPOINT}/supermarket/${state.selectedStore}/basicgood/${product}?status=${vote}`;\r\n    try{\r\n      await apiCall(url, \"POST\").catch(handleError);\r\n      getTimeline().catch(handleError);\r\n    }\r\n    catch(err){\r\n      handleError(err);\r\n    };\r\n  }\r\n\r\n  return (\r\n    <div id={baseProduct.item} className=\"product\">\r\n      <img className=\"product-image\" src={ images[baseProduct.item] } alt={baseProduct.item} />\r\n      <div className=\"product-timeline\">\r\n        { timeline }\r\n      </div>\r\n      <div className=\"vote\">\r\n        <button \r\n          className=\"green\"\r\n          data-product={baseProduct.item}\r\n          data-vote=\"true\"\r\n          onClick={ handleVote }\r\n        >SI</button>\r\n        <button \r\n          className=\"red\"\r\n          data-product={baseProduct.item}\r\n          data-vote=\"false\"\r\n          onClick={ handleVote }\r\n        >NO</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductTimeline;","export const baseProducts = [\r\n  {\r\n    item: \"water\",\r\n    timeline: []\r\n  },\r\n  {\r\n    item: \"canned_food\",\r\n    timeline: []\r\n  },\r\n  {\r\n    item: \"fruit\",\r\n    timeline: []\r\n  },\r\n  {\r\n    item: \"vegetables\",\r\n    timeline: []\r\n  },\r\n  {\r\n    item: \"pasta\",\r\n    timeline: []\r\n  },\r\n  {\r\n    item: \"rice\",\r\n    timeline: []\r\n  },\r\n  {\r\n    item: \"oil\",\r\n    timeline: []\r\n  },\r\n  {\r\n    item: \"flour\",\r\n    timeline: []\r\n  },\r\n  {\r\n    item: \"milk\",\r\n    timeline: []\r\n  },\r\n  {\r\n    item: \"eggs\",\r\n    timeline: []\r\n  },\r\n  {\r\n    item: \"baby_food\",\r\n    timeline: []\r\n  },\r\n  {\r\n    item: \"hand_soap\",\r\n    timeline: []\r\n  },\r\n  {\r\n    item: \"toilet_paper\",\r\n    timeline: []\r\n  },\r\n];","import React from 'react';\r\nimport ProductTimeline from './ProductTimeline/ProductTimeline';\r\nimport { Fragment } from 'react';\r\nimport './ProductsList.css';\r\nimport { baseProducts } from '../../lib/baseProducts';\r\n\r\n\r\nconst ProductsList = ({ state, getTimeline, BASE_ENDPOINT }) => {\r\n\r\n  let productTimeline;\r\n  let comment;\r\n\r\n  // check if there is a selected store and a timeline received from the database\r\n  if(state.selectedStore) {\r\n\r\n    // create a ProductTimeline component for each of our products using an empty timeline from src/lib/baseProducts.js\r\n    productTimeline = baseProducts.map(baseProduct => {\r\n      const [ dbProduct ] = state.storeTimeline.filter(store => store.item === baseProduct.item);\r\n\r\n      return <ProductTimeline\r\n      key={baseProduct.item}\r\n      baseProduct={ baseProduct }\r\n      dbProduct={ dbProduct }\r\n      state={ state }\r\n      getTimeline={getTimeline}\r\n      BASE_ENDPOINT={BASE_ENDPOINT}\r\n      />\r\n    });\r\n\r\n    comment = (<Fragment>\r\n      <div className=\"comment\">\r\n        <p>Vota si has vist recentment el producte disponible</p>\r\n      </div>\r\n    </Fragment>);\r\n  }\r\n\r\n  return (\r\n    <div className=\"product-list\">\r\n      { comment }\r\n      { productTimeline }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductsList;","import React from 'react';\r\nimport { Fragment } from 'react';\r\nimport './Loader.css';\r\n\r\nconst Loader = ({ loading }) => {\r\n\r\n  let myLoader;\r\n\r\n  if(loading) {\r\n    myLoader = <Fragment>\r\n    <div className=\"wrapper\">\r\n      <div className=\"my-loader\">\r\n        <div className=\"lds-roller\">\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </Fragment>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      { myLoader }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loader;","import React, { Component } from 'react';\nimport SearchForm from '../SearchForm/SearchForm';\nimport StoresList from '../StoresList/StoresList';\nimport ProductsList from '../ProductsList/ProductsList';\nimport Loader from '../Loader/Loader';\nimport { apiCall, handleError } from \"../../lib/utils\";\nimport './App.css';\n\nconst BASE_ENDPOINT = 'http://dispocat.sytes.net:4001/api';\n\nconst initialState = {\n  loading: false,\n  input: '',\n  currentLocation: {\n    lat: '',\n    lon: ''\n  },\n  nearStores: [],\n  selectedStore: '',\n  storeTimeline: [],\n  options: {\n    TIMELINE_SPLIT_COUNT: 48,\n    MINUTES_PER_PIECE: 5\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  };\n\n  // get the user location, save it to state, call the function to search stores from location\n  geoFindMe = (e) => {\n    e.preventDefault();\n    this.setState(initialState);\n    const success = (position) => {\n      const [ myLat, myLon ] = [ position.coords.latitude, position.coords.longitude ];\n      this.setState({\n        currentLocation: {\n          lat: myLat,\n          lon: myLon\n        }\n      });\n      const url = `${BASE_ENDPOINT}/supermarket/bylocation?lat=${myLat}&lon=${myLon}`;\n      this.searchStores(url).catch(handleError);\n    }\n\n    const error = (err) => console.log(err);\n\n    if(!navigator.geolocation) {\n      alert('No tens activada la geolocalitzacio');\n    } else {\n      navigator.geolocation.getCurrentPosition(success, error);\n    }\n  }\n\n  // saves the current form input value to state\n  onInputChange = (e) => {\n    this.setState({input: e.target.value});\n  }\n\n  // takes the value from the search form, call the function to search stores from address\n  findAddress = (e) => {\n    e.preventDefault();\n    this.setState(initialState);\n    if(!this.state.input) return;\n    if(this.state.input === 'rickroll') {\n      window.open('https://www.youtube.com/watch?v=dQw4w9WgXcQ');\n      return;\n    };\n    const url = `${BASE_ENDPOINT}/supermarket/byaddress?address=${encodeURI(this.state.input)}`;\n    this.searchStores(url).catch(handleError);\n  }\n\n  // calls the API to get stores from current location or from address\n  searchStores = async (url) => {\n    const search = document.querySelector('.search-form input');\n    search.value = '';\n    try{\n      this.setState({loading: true})\n      const stores = await apiCall(url, \"GET\");\n      this.setState({ nearStores: stores, loading: false });\n    } catch(err){\n      this.setState({ loading: false })\n      handleError(err);\n    }\n  }\n\n  // save the selected store in state, call function to get the timeline of that store\n  selectStore = async (e) => {\n    await this.setState({selectedStore : e.currentTarget.id});\n    this.getTimeline().catch(handleError);\n  }\n\n  // calls the API to get the timeline of the selected store from our database\n  // more functionality about the timeline in the ProductTimeline component\n  getTimeline = async () => {\n    const url = `${BASE_ENDPOINT}/supermarket/${this.state.selectedStore}`;\n    try{\n      this.setState({ loading: true })\n      const timeline = await apiCall(url, \"GET\");\n      this.setState({ storeTimeline: timeline, loading: false });\n    } catch(err){\n      this.setState({ loading: false })\n      handleError(err);\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"limit-width\">\n          <SearchForm\n            geoFindMe={this.geoFindMe} \n            findAddress={this.findAddress} \n            onInputChange={this.onInputChange}\n          />\n          <Loader loading={this.state.loading}/>\n          <StoresList \n            nearStores={this.state.nearStores} \n            selectStore={this.selectStore}\n            selectedStore={this.state.selectedStore}\n          />\n          <ProductsList \n            state={this.state}\n            getTimeline={this.getTimeline}\n            BASE_ENDPOINT={BASE_ENDPOINT}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}